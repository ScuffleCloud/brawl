---
source: server/src/webhook/parse.rs
expression: event
snapshot_kind: text
---
WebhookEvent {
    sender: Some(
        Author {
            login: "TroyKomodo",
            id: UserId(
                49777269,
            ),
            node_id: "MDQ6VXNlcjQ5Nzc3MjY5",
            avatar_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "avatars.githubusercontent.com",
                    ),
                ),
                port: None,
                path: "/u/49777269",
                query: Some(
                    "v=4",
                ),
                fragment: None,
            },
            gravatar_id: "",
            url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo",
                query: None,
                fragment: None,
            },
            html_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "github.com",
                    ),
                ),
                port: None,
                path: "/TroyKomodo",
                query: None,
                fragment: None,
            },
            followers_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/followers",
                query: None,
                fragment: None,
            },
            following_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/following%7B/other_user%7D",
                query: None,
                fragment: None,
            },
            gists_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/gists%7B/gist_id%7D",
                query: None,
                fragment: None,
            },
            starred_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/starred%7B/owner%7D%7B/repo%7D",
                query: None,
                fragment: None,
            },
            subscriptions_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/subscriptions",
                query: None,
                fragment: None,
            },
            organizations_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/orgs",
                query: None,
                fragment: None,
            },
            repos_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/repos",
                query: None,
                fragment: None,
            },
            events_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/events%7B/privacy%7D",
                query: None,
                fragment: None,
            },
            received_events_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/received_events",
                query: None,
                fragment: None,
            },
            type: "User",
            site_admin: false,
            patch_url: None,
            email: None,
        },
    ),
    repository: Some(
        Repository {
            id: RepositoryId(
                900225914,
            ),
            node_id: Some(
                "R_kgDONahbeg",
            ),
            name: "brawl",
            full_name: Some(
                "ScuffleCloud/brawl",
            ),
            owner: Some(
                Author {
                    login: "ScuffleCloud",
                    id: UserId(
                        122814584,
                    ),
                    node_id: "O_kgDOB1IAeA",
                    avatar_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "avatars.githubusercontent.com",
                            ),
                        ),
                        port: None,
                        path: "/u/122814584",
                        query: Some(
                            "v=4",
                        ),
                        fragment: None,
                    },
                    gravatar_id: "",
                    url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud",
                        query: None,
                        fragment: None,
                    },
                    html_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "github.com",
                            ),
                        ),
                        port: None,
                        path: "/ScuffleCloud",
                        query: None,
                        fragment: None,
                    },
                    followers_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/followers",
                        query: None,
                        fragment: None,
                    },
                    following_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/following%7B/other_user%7D",
                        query: None,
                        fragment: None,
                    },
                    gists_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/gists%7B/gist_id%7D",
                        query: None,
                        fragment: None,
                    },
                    starred_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/starred%7B/owner%7D%7B/repo%7D",
                        query: None,
                        fragment: None,
                    },
                    subscriptions_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/subscriptions",
                        query: None,
                        fragment: None,
                    },
                    organizations_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/orgs",
                        query: None,
                        fragment: None,
                    },
                    repos_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/repos",
                        query: None,
                        fragment: None,
                    },
                    events_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/events%7B/privacy%7D",
                        query: None,
                        fragment: None,
                    },
                    received_events_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/received_events",
                        query: None,
                        fragment: None,
                    },
                    type: "Organization",
                    site_admin: false,
                    patch_url: None,
                    email: Some(
                        "opensource@scuffle.cloud",
                    ),
                },
            ),
            private: Some(
                false,
            ),
            html_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/brawl",
                    query: None,
                    fragment: None,
                },
            ),
            description: Some(
                "A performance monitoring tool for CI/CD Pipelines",
            ),
            fork: Some(
                false,
            ),
            url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "github.com",
                    ),
                ),
                port: None,
                path: "/ScuffleCloud/brawl",
                query: None,
                fragment: None,
            },
            archive_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/%7Barchive_format%7D%7B/ref%7D",
                    query: None,
                    fragment: None,
                },
            ),
            assignees_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/assignees%7B/user%7D",
                    query: None,
                    fragment: None,
                },
            ),
            blobs_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/git/blobs%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            branches_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/branches%7B/branch%7D",
                    query: None,
                    fragment: None,
                },
            ),
            collaborators_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/collaborators%7B/collaborator%7D",
                    query: None,
                    fragment: None,
                },
            ),
            comments_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/comments%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            commits_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/commits%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            compare_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/compare/%7Bbase%7D...%7Bhead%7D",
                    query: None,
                    fragment: None,
                },
            ),
            contents_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/contents/%7B+path%7D",
                    query: None,
                    fragment: None,
                },
            ),
            contributors_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/contributors",
                    query: None,
                    fragment: None,
                },
            ),
            deployments_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/deployments",
                    query: None,
                    fragment: None,
                },
            ),
            downloads_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/downloads",
                    query: None,
                    fragment: None,
                },
            ),
            events_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/events",
                    query: None,
                    fragment: None,
                },
            ),
            forks_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/forks",
                    query: None,
                    fragment: None,
                },
            ),
            git_commits_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/git/commits%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            git_refs_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/git/refs%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            git_tags_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/git/tags%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            git_url: Some(
                Url {
                    scheme: "git",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/brawl.git",
                    query: None,
                    fragment: None,
                },
            ),
            issue_comment_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/issues/comments%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            issue_events_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/issues/events%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            issues_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/issues%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            keys_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/keys%7B/key_id%7D",
                    query: None,
                    fragment: None,
                },
            ),
            labels_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/labels%7B/name%7D",
                    query: None,
                    fragment: None,
                },
            ),
            languages_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/languages",
                    query: None,
                    fragment: None,
                },
            ),
            merges_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/merges",
                    query: None,
                    fragment: None,
                },
            ),
            milestones_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/milestones%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            notifications_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/notifications%7B",
                    query: Some(
                        "since,all,participating}",
                    ),
                    fragment: None,
                },
            ),
            pulls_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/pulls%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            releases_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/releases%7B/id%7D",
                    query: None,
                    fragment: None,
                },
            ),
            ssh_url: Some(
                "git@github.com:ScuffleCloud/brawl.git",
            ),
            stargazers_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/stargazers",
                    query: None,
                    fragment: None,
                },
            ),
            statuses_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/statuses/%7Bsha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            subscribers_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/subscribers",
                    query: None,
                    fragment: None,
                },
            ),
            subscription_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/subscription",
                    query: None,
                    fragment: None,
                },
            ),
            tags_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/tags",
                    query: None,
                    fragment: None,
                },
            ),
            teams_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/teams",
                    query: None,
                    fragment: None,
                },
            ),
            trees_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/git/trees%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            clone_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/brawl.git",
                    query: None,
                    fragment: None,
                },
            ),
            mirror_url: None,
            hooks_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/brawl/hooks",
                    query: None,
                    fragment: None,
                },
            ),
            svn_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/brawl",
                    query: None,
                    fragment: None,
                },
            ),
            homepage: Some(
                "https://scuffle.cloud",
            ),
            language: Some(
                String("Rust"),
            ),
            forks_count: Some(
                1,
            ),
            stargazers_count: Some(
                8,
            ),
            watchers_count: Some(
                8,
            ),
            size: Some(
                265,
            ),
            default_branch: Some(
                "main",
            ),
            open_issues_count: Some(
                1,
            ),
            is_template: Some(
                false,
            ),
            topics: Some(
                [
                    "benchmarks",
                    "cd",
                    "ci",
                    "monitoring",
                ],
            ),
            has_issues: Some(
                true,
            ),
            has_projects: Some(
                false,
            ),
            has_wiki: Some(
                true,
            ),
            has_pages: Some(
                false,
            ),
            has_downloads: Some(
                true,
            ),
            archived: Some(
                false,
            ),
            disabled: Some(
                false,
            ),
            visibility: Some(
                "public",
            ),
            pushed_at: Some(
                2024-12-21T23:37:09Z,
            ),
            created_at: Some(
                2024-12-08T07:54:38Z,
            ),
            updated_at: Some(
                2024-12-18T23:31:22Z,
            ),
            permissions: None,
            allow_rebase_merge: None,
            template_repository: None,
            allow_squash_merge: None,
            allow_merge_commit: None,
            allow_update_branch: None,
            allow_forking: Some(
                true,
            ),
            subscribers_count: None,
            network_count: None,
            license: Some(
                License {
                    key: "mit",
                    name: "MIT License",
                    node_id: "MDc6TGljZW5zZTEz",
                    spdx_id: "MIT",
                    url: Some(
                        Url {
                            scheme: "https",
                            cannot_be_a_base: false,
                            username: "",
                            password: None,
                            host: Some(
                                Domain(
                                    "api.github.com",
                                ),
                            ),
                            port: None,
                            path: "/licenses/mit",
                            query: None,
                            fragment: None,
                        },
                    ),
                    html_url: None,
                    description: None,
                    implementation: None,
                    permissions: None,
                    conditions: None,
                    limitations: None,
                    body: None,
                    featured: None,
                },
            ),
            allow_auto_merge: None,
            delete_branch_on_merge: None,
            parent: None,
            source: None,
        },
    ),
    installation: Some(
        Minimal(
            EventInstallationId {
                id: InstallationId(
                    58286822,
                ),
                node_id: "MDIzOkludGVncmF0aW9uSW5zdGFsbGF0aW9uNTgyODY4MjI=",
            },
        ),
    ),
    kind: Push,
    specific: Push(
        PushWebhookEventPayload {
            enterprise: None,
            after: "e48e2992625296b086ffc6430bdefb06894144d9",
            base_ref: None,
            before: "d22a5bdc9af3d51aa6ecc6011b440f0dcda466a3",
            commits: [
                PushWebhookEventCommit {
                    added: [
                        "server/src/github/mock/comment.json",
                        "server/src/github/mock/commit.json",
                        "server/src/github/mock/create_commit.json",
                        "server/src/github/mock/create_merge.json",
                        "server/src/github/mock/create_merge_conflict.json",
                        "server/src/github/mock/delete_branch.json",
                        "server/src/github/mock/delete_branch_non_exist.json",
                        "server/src/github/mock/pr.json",
                        "server/src/github/mock/pr_reviewers.json",
                        "server/src/github/mock/ref_latest_commit.json",
                        "server/src/github/mock/ref_not_found.json",
                        "server/src/github/mock/role_members.json",
                        "server/src/github/mock/team_members.json",
                        "server/src/github/mock/team_not_found.json",
                        "server/src/github/mock/update_ref.json",
                        "server/src/github/mock/user.json",
                        "server/src/github/mock/user_not_found.json",
                        "server/src/utils.rs",
                    ],
                    author: GitUserTime {
                        user: CommitAuthor {
                            name: "Troy Benson",
                            email: "troybensonsa@gmail.com",
                            date: None,
                        },
                        date: None,
                        username: Some(
                            "TroyKomodo",
                        ),
                    },
                    committer: GitUserTime {
                        user: CommitAuthor {
                            name: "Troy Benson",
                            email: "troybensonsa@gmail.com",
                            date: None,
                        },
                        date: None,
                        username: Some(
                            "TroyKomodo",
                        ),
                    },
                    distinct: true,
                    id: "e48e2992625296b086ffc6430bdefb06894144d9",
                    message: "github testing",
                    modified: [
                        "Cargo.lock",
                        "server/Cargo.toml",
                        "server/src/auto_start.rs",
                        "server/src/bin/server.rs",
                        "server/src/command/cancel.rs",
                        "server/src/command/dry_run.rs",
                        "server/src/command/merge.rs",
                        "server/src/command/mod.rs",
                        "server/src/command/ping.rs",
                        "server/src/command/pr.rs",
                        "server/src/command/retry.rs",
                        "server/src/github/config.rs",
                        "server/src/github/installation.rs",
                        "server/src/github/merge_workflow.rs",
                        "server/src/github/messages/mod.rs",
                        "server/src/github/mod.rs",
                        "server/src/github/models.rs",
                        "server/src/github/repo.rs",
                        "server/src/lib.rs",
                        "server/src/webhook/mod.rs",
                    ],
                    removed: [],
                    timestamp: 2024-12-21T23:37:06Z,
                    tree_id: "2736c601a8314842dc50ca679a9ba4b9fa06e374",
                    url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "github.com",
                            ),
                        ),
                        port: None,
                        path: "/ScuffleCloud/brawl/commit/e48e2992625296b086ffc6430bdefb06894144d9",
                        query: None,
                        fragment: None,
                    },
                },
            ],
            compare: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "github.com",
                    ),
                ),
                port: None,
                path: "/ScuffleCloud/brawl/compare/d22a5bdc9af3...e48e29926252",
                query: None,
                fragment: None,
            },
            created: false,
            deleted: false,
            forced: false,
            head_commit: Some(
                PushWebhookEventCommit {
                    added: [
                        "server/src/github/mock/comment.json",
                        "server/src/github/mock/commit.json",
                        "server/src/github/mock/create_commit.json",
                        "server/src/github/mock/create_merge.json",
                        "server/src/github/mock/create_merge_conflict.json",
                        "server/src/github/mock/delete_branch.json",
                        "server/src/github/mock/delete_branch_non_exist.json",
                        "server/src/github/mock/pr.json",
                        "server/src/github/mock/pr_reviewers.json",
                        "server/src/github/mock/ref_latest_commit.json",
                        "server/src/github/mock/ref_not_found.json",
                        "server/src/github/mock/role_members.json",
                        "server/src/github/mock/team_members.json",
                        "server/src/github/mock/team_not_found.json",
                        "server/src/github/mock/update_ref.json",
                        "server/src/github/mock/user.json",
                        "server/src/github/mock/user_not_found.json",
                        "server/src/utils.rs",
                    ],
                    author: GitUserTime {
                        user: CommitAuthor {
                            name: "Troy Benson",
                            email: "troybensonsa@gmail.com",
                            date: None,
                        },
                        date: None,
                        username: Some(
                            "TroyKomodo",
                        ),
                    },
                    committer: GitUserTime {
                        user: CommitAuthor {
                            name: "Troy Benson",
                            email: "troybensonsa@gmail.com",
                            date: None,
                        },
                        date: None,
                        username: Some(
                            "TroyKomodo",
                        ),
                    },
                    distinct: true,
                    id: "e48e2992625296b086ffc6430bdefb06894144d9",
                    message: "github testing",
                    modified: [
                        "Cargo.lock",
                        "server/Cargo.toml",
                        "server/src/auto_start.rs",
                        "server/src/bin/server.rs",
                        "server/src/command/cancel.rs",
                        "server/src/command/dry_run.rs",
                        "server/src/command/merge.rs",
                        "server/src/command/mod.rs",
                        "server/src/command/ping.rs",
                        "server/src/command/pr.rs",
                        "server/src/command/retry.rs",
                        "server/src/github/config.rs",
                        "server/src/github/installation.rs",
                        "server/src/github/merge_workflow.rs",
                        "server/src/github/messages/mod.rs",
                        "server/src/github/mod.rs",
                        "server/src/github/models.rs",
                        "server/src/github/repo.rs",
                        "server/src/lib.rs",
                        "server/src/webhook/mod.rs",
                    ],
                    removed: [],
                    timestamp: 2024-12-21T23:37:06Z,
                    tree_id: "2736c601a8314842dc50ca679a9ba4b9fa06e374",
                    url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "github.com",
                            ),
                        ),
                        port: None,
                        path: "/ScuffleCloud/brawl/commit/e48e2992625296b086ffc6430bdefb06894144d9",
                        query: None,
                        fragment: None,
                    },
                },
            ),
            pusher: GitUserTime {
                user: CommitAuthor {
                    name: "TroyKomodo",
                    email: "",
                    date: None,
                },
                date: None,
                username: None,
            },
            ref: "refs/heads/troy/refactor",
        },
    ),
}
