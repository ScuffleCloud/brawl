---
source: server/src/webhook/parse.rs
expression: event
snapshot_kind: text
---
WebhookEvent {
    sender: Some(
        Author {
            login: "TroyKomodo",
            id: UserId(
                49777269,
            ),
            node_id: "MDQ6VXNlcjQ5Nzc3MjY5",
            avatar_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "avatars.githubusercontent.com",
                    ),
                ),
                port: None,
                path: "/u/49777269",
                query: Some(
                    "v=4",
                ),
                fragment: None,
            },
            gravatar_id: "",
            url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo",
                query: None,
                fragment: None,
            },
            html_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "github.com",
                    ),
                ),
                port: None,
                path: "/TroyKomodo",
                query: None,
                fragment: None,
            },
            followers_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/followers",
                query: None,
                fragment: None,
            },
            following_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/following%7B/other_user%7D",
                query: None,
                fragment: None,
            },
            gists_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/gists%7B/gist_id%7D",
                query: None,
                fragment: None,
            },
            starred_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/starred%7B/owner%7D%7B/repo%7D",
                query: None,
                fragment: None,
            },
            subscriptions_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/subscriptions",
                query: None,
                fragment: None,
            },
            organizations_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/orgs",
                query: None,
                fragment: None,
            },
            repos_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/repos",
                query: None,
                fragment: None,
            },
            events_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/events%7B/privacy%7D",
                query: None,
                fragment: None,
            },
            received_events_url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/users/TroyKomodo/received_events",
                query: None,
                fragment: None,
            },
            type: "User",
            site_admin: false,
            patch_url: None,
            email: None,
        },
    ),
    repository: Some(
        Repository {
            id: RepositoryId(
                594510762,
            ),
            node_id: Some(
                "R_kgDOI2-Dqg",
            ),
            name: "scuffle",
            full_name: Some(
                "ScuffleCloud/scuffle",
            ),
            owner: Some(
                Author {
                    login: "ScuffleCloud",
                    id: UserId(
                        122814584,
                    ),
                    node_id: "O_kgDOB1IAeA",
                    avatar_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "avatars.githubusercontent.com",
                            ),
                        ),
                        port: None,
                        path: "/u/122814584",
                        query: Some(
                            "v=4",
                        ),
                        fragment: None,
                    },
                    gravatar_id: "",
                    url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud",
                        query: None,
                        fragment: None,
                    },
                    html_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "github.com",
                            ),
                        ),
                        port: None,
                        path: "/ScuffleCloud",
                        query: None,
                        fragment: None,
                    },
                    followers_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/followers",
                        query: None,
                        fragment: None,
                    },
                    following_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/following%7B/other_user%7D",
                        query: None,
                        fragment: None,
                    },
                    gists_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/gists%7B/gist_id%7D",
                        query: None,
                        fragment: None,
                    },
                    starred_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/starred%7B/owner%7D%7B/repo%7D",
                        query: None,
                        fragment: None,
                    },
                    subscriptions_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/subscriptions",
                        query: None,
                        fragment: None,
                    },
                    organizations_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/orgs",
                        query: None,
                        fragment: None,
                    },
                    repos_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/repos",
                        query: None,
                        fragment: None,
                    },
                    events_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/events%7B/privacy%7D",
                        query: None,
                        fragment: None,
                    },
                    received_events_url: Url {
                        scheme: "https",
                        cannot_be_a_base: false,
                        username: "",
                        password: None,
                        host: Some(
                            Domain(
                                "api.github.com",
                            ),
                        ),
                        port: None,
                        path: "/users/ScuffleCloud/received_events",
                        query: None,
                        fragment: None,
                    },
                    type: "Organization",
                    site_admin: false,
                    patch_url: None,
                    email: None,
                },
            ),
            private: Some(
                false,
            ),
            html_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/scuffle",
                    query: None,
                    fragment: None,
                },
            ),
            description: Some(
                "Opensource Cloud Provider (focusing on video streaming)",
            ),
            fork: Some(
                false,
            ),
            url: Url {
                scheme: "https",
                cannot_be_a_base: false,
                username: "",
                password: None,
                host: Some(
                    Domain(
                        "api.github.com",
                    ),
                ),
                port: None,
                path: "/repos/ScuffleCloud/scuffle",
                query: None,
                fragment: None,
            },
            archive_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/%7Barchive_format%7D%7B/ref%7D",
                    query: None,
                    fragment: None,
                },
            ),
            assignees_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/assignees%7B/user%7D",
                    query: None,
                    fragment: None,
                },
            ),
            blobs_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/git/blobs%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            branches_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/branches%7B/branch%7D",
                    query: None,
                    fragment: None,
                },
            ),
            collaborators_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/collaborators%7B/collaborator%7D",
                    query: None,
                    fragment: None,
                },
            ),
            comments_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/comments%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            commits_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/commits%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            compare_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/compare/%7Bbase%7D...%7Bhead%7D",
                    query: None,
                    fragment: None,
                },
            ),
            contents_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/contents/%7B+path%7D",
                    query: None,
                    fragment: None,
                },
            ),
            contributors_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/contributors",
                    query: None,
                    fragment: None,
                },
            ),
            deployments_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/deployments",
                    query: None,
                    fragment: None,
                },
            ),
            downloads_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/downloads",
                    query: None,
                    fragment: None,
                },
            ),
            events_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/events",
                    query: None,
                    fragment: None,
                },
            ),
            forks_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/forks",
                    query: None,
                    fragment: None,
                },
            ),
            git_commits_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/git/commits%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            git_refs_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/git/refs%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            git_tags_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/git/tags%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            git_url: Some(
                Url {
                    scheme: "git",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/scuffle.git",
                    query: None,
                    fragment: None,
                },
            ),
            issue_comment_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/issues/comments%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            issue_events_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/issues/events%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            issues_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/issues%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            keys_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/keys%7B/key_id%7D",
                    query: None,
                    fragment: None,
                },
            ),
            labels_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/labels%7B/name%7D",
                    query: None,
                    fragment: None,
                },
            ),
            languages_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/languages",
                    query: None,
                    fragment: None,
                },
            ),
            merges_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/merges",
                    query: None,
                    fragment: None,
                },
            ),
            milestones_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/milestones%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            notifications_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/notifications%7B",
                    query: Some(
                        "since,all,participating}",
                    ),
                    fragment: None,
                },
            ),
            pulls_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/pulls%7B/number%7D",
                    query: None,
                    fragment: None,
                },
            ),
            releases_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/releases%7B/id%7D",
                    query: None,
                    fragment: None,
                },
            ),
            ssh_url: Some(
                "git@github.com:ScuffleCloud/scuffle.git",
            ),
            stargazers_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/stargazers",
                    query: None,
                    fragment: None,
                },
            ),
            statuses_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/statuses/%7Bsha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            subscribers_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/subscribers",
                    query: None,
                    fragment: None,
                },
            ),
            subscription_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/subscription",
                    query: None,
                    fragment: None,
                },
            ),
            tags_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/tags",
                    query: None,
                    fragment: None,
                },
            ),
            teams_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/teams",
                    query: None,
                    fragment: None,
                },
            ),
            trees_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/git/trees%7B/sha%7D",
                    query: None,
                    fragment: None,
                },
            ),
            clone_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/scuffle.git",
                    query: None,
                    fragment: None,
                },
            ),
            mirror_url: None,
            hooks_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "api.github.com",
                        ),
                    ),
                    port: None,
                    path: "/repos/ScuffleCloud/scuffle/hooks",
                    query: None,
                    fragment: None,
                },
            ),
            svn_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "github.com",
                        ),
                    ),
                    port: None,
                    path: "/ScuffleCloud/scuffle",
                    query: None,
                    fragment: None,
                },
            ),
            homepage: Some(
                "https://scuffle.cloud",
            ),
            language: Some(
                String("Rust"),
            ),
            forks_count: Some(
                25,
            ),
            stargazers_count: Some(
                270,
            ),
            watchers_count: Some(
                270,
            ),
            size: Some(
                9995,
            ),
            default_branch: Some(
                "main",
            ),
            open_issues_count: Some(
                2,
            ),
            is_template: Some(
                false,
            ),
            topics: Some(
                [
                    "live",
                    "opensource",
                    "rust",
                    "streaming",
                    "svelte",
                    "video",
                ],
            ),
            has_issues: Some(
                true,
            ),
            has_projects: Some(
                false,
            ),
            has_wiki: Some(
                false,
            ),
            has_pages: Some(
                false,
            ),
            has_downloads: Some(
                true,
            ),
            archived: Some(
                false,
            ),
            disabled: Some(
                false,
            ),
            visibility: Some(
                "public",
            ),
            pushed_at: Some(
                2024-12-14T04:57:52Z,
            ),
            created_at: Some(
                2023-01-28T19:17:28Z,
            ),
            updated_at: Some(
                2024-12-15T06:44:55Z,
            ),
            permissions: None,
            allow_rebase_merge: None,
            template_repository: None,
            allow_squash_merge: None,
            allow_merge_commit: None,
            allow_update_branch: None,
            allow_forking: Some(
                true,
            ),
            subscribers_count: None,
            network_count: None,
            license: Some(
                License {
                    key: "mit",
                    name: "MIT License",
                    node_id: "MDc6TGljZW5zZTEz",
                    spdx_id: "MIT",
                    url: Some(
                        Url {
                            scheme: "https",
                            cannot_be_a_base: false,
                            username: "",
                            password: None,
                            host: Some(
                                Domain(
                                    "api.github.com",
                                ),
                            ),
                            port: None,
                            path: "/licenses/mit",
                            query: None,
                            fragment: None,
                        },
                    ),
                    html_url: None,
                    description: None,
                    implementation: None,
                    permissions: None,
                    conditions: None,
                    limitations: None,
                    body: None,
                    featured: None,
                },
            ),
            allow_auto_merge: None,
            delete_branch_on_merge: None,
            parent: None,
            source: None,
        },
    ),
    installation: Some(
        Minimal(
            EventInstallationId {
                id: InstallationId(
                    58286822,
                ),
                node_id: "MDIzOkludGVncmF0aW9uSW5zdGFsbGF0aW9uNTgyODY4MjI=",
            },
        ),
    ),
    kind: CheckRun,
    specific: CheckRun(
        CheckRunWebhookEventPayload {
            action: Created,
            check_run: Object {
                "app": Object {
                    "client_id": String("Iv1.05c79e9ad1f6bdfa"),
                    "created_at": String("2018-07-30T09:30:17Z"),
                    "description": String("Automate your workflow from idea to production"),
                    "events": Array [
                        String("branch_protection_rule"),
                        String("check_run"),
                        String("check_suite"),
                        String("create"),
                        String("delete"),
                        String("deployment"),
                        String("deployment_status"),
                        String("discussion"),
                        String("discussion_comment"),
                        String("fork"),
                        String("gollum"),
                        String("issues"),
                        String("issue_comment"),
                        String("label"),
                        String("merge_group"),
                        String("milestone"),
                        String("page_build"),
                        String("project"),
                        String("project_card"),
                        String("project_column"),
                        String("public"),
                        String("pull_request"),
                        String("pull_request_review"),
                        String("pull_request_review_comment"),
                        String("push"),
                        String("registry_package"),
                        String("release"),
                        String("repository"),
                        String("repository_dispatch"),
                        String("status"),
                        String("watch"),
                        String("workflow_dispatch"),
                        String("workflow_run"),
                    ],
                    "external_url": String("https://help.github.com/en/actions"),
                    "html_url": String("https://github.com/apps/github-actions"),
                    "id": Number(15368),
                    "name": String("GitHub Actions"),
                    "node_id": String("MDM6QXBwMTUzNjg="),
                    "owner": Object {
                        "avatar_url": String("https://avatars.githubusercontent.com/u/9919?v=4"),
                        "events_url": String("https://api.github.com/users/github/events{/privacy}"),
                        "followers_url": String("https://api.github.com/users/github/followers"),
                        "following_url": String("https://api.github.com/users/github/following{/other_user}"),
                        "gists_url": String("https://api.github.com/users/github/gists{/gist_id}"),
                        "gravatar_id": String(""),
                        "html_url": String("https://github.com/github"),
                        "id": Number(9919),
                        "login": String("github"),
                        "node_id": String("MDEyOk9yZ2FuaXphdGlvbjk5MTk="),
                        "organizations_url": String("https://api.github.com/users/github/orgs"),
                        "received_events_url": String("https://api.github.com/users/github/received_events"),
                        "repos_url": String("https://api.github.com/users/github/repos"),
                        "site_admin": Bool(false),
                        "starred_url": String("https://api.github.com/users/github/starred{/owner}{/repo}"),
                        "subscriptions_url": String("https://api.github.com/users/github/subscriptions"),
                        "type": String("Organization"),
                        "url": String("https://api.github.com/users/github"),
                        "user_view_type": String("public"),
                    },
                    "permissions": Object {
                        "actions": String("write"),
                        "administration": String("read"),
                        "attestations": String("write"),
                        "checks": String("write"),
                        "contents": String("write"),
                        "deployments": String("write"),
                        "discussions": String("write"),
                        "issues": String("write"),
                        "merge_queues": String("write"),
                        "metadata": String("read"),
                        "packages": String("write"),
                        "pages": String("write"),
                        "pull_requests": String("write"),
                        "repository_hooks": String("write"),
                        "repository_projects": String("write"),
                        "security_events": String("write"),
                        "statuses": String("write"),
                        "vulnerability_alerts": String("read"),
                    },
                    "slug": String("github-actions"),
                    "updated_at": String("2024-04-10T20:33:16Z"),
                },
                "check_suite": Object {
                    "after": String("c0580a621d824cc8097f88a76f47f6b313fcee99"),
                    "app": Object {
                        "client_id": String("Iv1.05c79e9ad1f6bdfa"),
                        "created_at": String("2018-07-30T09:30:17Z"),
                        "description": String("Automate your workflow from idea to production"),
                        "events": Array [
                            String("branch_protection_rule"),
                            String("check_run"),
                            String("check_suite"),
                            String("create"),
                            String("delete"),
                            String("deployment"),
                            String("deployment_status"),
                            String("discussion"),
                            String("discussion_comment"),
                            String("fork"),
                            String("gollum"),
                            String("issues"),
                            String("issue_comment"),
                            String("label"),
                            String("merge_group"),
                            String("milestone"),
                            String("page_build"),
                            String("project"),
                            String("project_card"),
                            String("project_column"),
                            String("public"),
                            String("pull_request"),
                            String("pull_request_review"),
                            String("pull_request_review_comment"),
                            String("push"),
                            String("registry_package"),
                            String("release"),
                            String("repository"),
                            String("repository_dispatch"),
                            String("status"),
                            String("watch"),
                            String("workflow_dispatch"),
                            String("workflow_run"),
                        ],
                        "external_url": String("https://help.github.com/en/actions"),
                        "html_url": String("https://github.com/apps/github-actions"),
                        "id": Number(15368),
                        "name": String("GitHub Actions"),
                        "node_id": String("MDM6QXBwMTUzNjg="),
                        "owner": Object {
                            "avatar_url": String("https://avatars.githubusercontent.com/u/9919?v=4"),
                            "events_url": String("https://api.github.com/users/github/events{/privacy}"),
                            "followers_url": String("https://api.github.com/users/github/followers"),
                            "following_url": String("https://api.github.com/users/github/following{/other_user}"),
                            "gists_url": String("https://api.github.com/users/github/gists{/gist_id}"),
                            "gravatar_id": String(""),
                            "html_url": String("https://github.com/github"),
                            "id": Number(9919),
                            "login": String("github"),
                            "node_id": String("MDEyOk9yZ2FuaXphdGlvbjk5MTk="),
                            "organizations_url": String("https://api.github.com/users/github/orgs"),
                            "received_events_url": String("https://api.github.com/users/github/received_events"),
                            "repos_url": String("https://api.github.com/users/github/repos"),
                            "site_admin": Bool(false),
                            "starred_url": String("https://api.github.com/users/github/starred{/owner}{/repo}"),
                            "subscriptions_url": String("https://api.github.com/users/github/subscriptions"),
                            "type": String("Organization"),
                            "url": String("https://api.github.com/users/github"),
                            "user_view_type": String("public"),
                        },
                        "permissions": Object {
                            "actions": String("write"),
                            "administration": String("read"),
                            "attestations": String("write"),
                            "checks": String("write"),
                            "contents": String("write"),
                            "deployments": String("write"),
                            "discussions": String("write"),
                            "issues": String("write"),
                            "merge_queues": String("write"),
                            "metadata": String("read"),
                            "packages": String("write"),
                            "pages": String("write"),
                            "pull_requests": String("write"),
                            "repository_hooks": String("write"),
                            "repository_projects": String("write"),
                            "security_events": String("write"),
                            "statuses": String("write"),
                            "vulnerability_alerts": String("read"),
                        },
                        "slug": String("github-actions"),
                        "updated_at": String("2024-04-10T20:33:16Z"),
                    },
                    "before": String("96a6ddb2cc8cac22c4daa82cb28120f47a04fee7"),
                    "conclusion": Null,
                    "created_at": String("2024-12-22T01:24:39Z"),
                    "head_branch": String("main"),
                    "head_sha": String("c0580a621d824cc8097f88a76f47f6b313fcee99"),
                    "id": Number(32346401207),
                    "node_id": String("CS_kwDOI2-Dqs8AAAAHh_7ptw"),
                    "pull_requests": Array [],
                    "status": String("queued"),
                    "updated_at": String("2024-12-22T01:24:39Z"),
                    "url": String("https://api.github.com/repos/ScuffleCloud/scuffle/check-suites/32346401207"),
                },
                "completed_at": Null,
                "conclusion": Null,
                "details_url": String("https://github.com/ScuffleCloud/scuffle/actions/runs/12450045856/job/34756421189"),
                "external_id": String("67049caa-ba6d-54b5-8d6c-ea858021b916"),
                "head_sha": String("c0580a621d824cc8097f88a76f47f6b313fcee99"),
                "html_url": String("https://github.com/ScuffleCloud/scuffle/actions/runs/12450045856/job/34756421189"),
                "id": Number(34756421189),
                "name": String("audit"),
                "node_id": String("CR_kwDOI2-Dqs8AAAAIF6TmRQ"),
                "output": Object {
                    "annotations_count": Number(0),
                    "annotations_url": String("https://api.github.com/repos/ScuffleCloud/scuffle/check-runs/34756421189/annotations"),
                    "summary": Null,
                    "text": Null,
                    "title": Null,
                },
                "pull_requests": Array [],
                "started_at": String("2024-12-22T01:24:41Z"),
                "status": String("queued"),
                "url": String("https://api.github.com/repos/ScuffleCloud/scuffle/check-runs/34756421189"),
            },
        },
    ),
}
